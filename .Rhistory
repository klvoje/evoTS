devtools::install_github("klvoje/evoTS")
trait_means<-rnorm(20)
trait_variance<-rep(0.5,20)
sample_size<-rep(30,20)
time_vector<-seq(1,20,1)
indata.evoTS<-paleoTS::as.paleoTS(mm = trait_means, vv = trait_variance, nn = sample_size, tt = time_vector)
indata.evoTS
install(evoTS)
require(evoTS)
opt.joint.accel(indata.evoTS)
plotpaleoTS(indata.evoTS)
ln.diameter<-paleoTS::ln.paleoTS(diameter_S.yellowstonensis)
ln.diameter$tt<-ln.diameter$tt/(max(ln.diameter$tt))
plotpaleoTS(ln.diameter)
opt.joint.decel(ln.diameter)
confidence.decel(ln.diameter, vstep.vec = seq(0,1.2,0.01), r.vec = seq(-5,0,0.01))
logl.surface.decel(ln.diameter, vstep.vec = seq(0,1.2,0.01), r.vec = seq(-5,0,0.01))
loglik.surface.decel(ln.diameter, vstep.vec = seq(0,1.2,0.01), r.vec = seq(-5,0,0.01))
opt.joint.accel(ln.diameter)
loglik.surface.accel(ln.diameter, vstep = seq(0,5,0.01), r.vec = seq(0,1.5, 0.005))
Bokma.PE<-fit.Bokma(ln.diameter, minb=10)
y<-ln.diameter
minb = 10
pool = TRUE
silent = FALSE
hess = FALSE
shift.point = 20
x <- paleoTS::sim.GRW(60)
fit.Bokma(x, shift.point = 20)
x
ln.diameter
ng <- 2
ns <- length(y$mm)
if(is.numeric(shift.point) == TRUE) GG <-shift.point else GG <- shifts(ns, ng, minb = minb)
GG<-as.matrix(GG)
if (ncol(GG) == 1) print("Fitting the model for a user-defined switchpoint") else print("Searching for all possible switchpoints in timeseries")
nc <- ncol(GG)
if (!silent)
cat("Total # hypotheses: ", nc, "\n")
wl <- list()
logl <- array(-Inf, dim = nc)
Stasis.PE<-paleoTS::fitGpunc(ln.diameter, minb=10, silent = TRUE)
paleoTS::fitGpunc(ln.diameter, minb=10, silent = TRUE)
Stasis.PE<-paleoTS::fitGpunc(ln.diameter, minb=10, silent = TRUE)
opt.joint.OUBM(ln.diameter)
opt.joint.OUBM(ln.diameter, opt.anc  = FALSE)
paleoTS::opt.joint.OU(ln.diameter)
opt.joint.OUBM(ln.diameter, opt.anc = TRUE, iterations = 100)
loglik.surface.OU(ln.diameter, stat.var.vec=seq(0,0.1,0.001), h.vec=seq(0,0.4,0.001))
loglik.surface.Bokma (ln.diameter.paleoTS, vstep_1.vec=seq(0,1,0.01), vstep_2.vec=seq(0,0.4, 0.01),shift=18, anc=3.7157502  , new.opt=4.1349082)
loglik.surface.Bokma (ln.diameter, vstep_1.vec=seq(0,1,0.01), vstep_2.vec=seq(0,0.4, 0.01),shift=18, anc=3.7157502  , new.opt=4.1349082)
fit.all.univariate.models(ln.diameter)
fit.mode.shift(ln.diameter, model1 = "URW", model2 = "URW", minb = 10)
ng <- 2
ns <- length(y$mm)
if(is.numeric(shift.point) == TRUE) GG <-shift.point else GG <- shifts(ns, ng, minb = minb)
GG<-as.matrix(GG)
if (ncol(GG) == 1) print("Fitting the model for a user-defined switchpoint") else print("Searching for all possible switchpoints in timeseries")
nc <- ncol(GG)
if (!silent)
cat("Total # hypotheses: ", nc, "\n")
wl <- list()
logl <- array(-Inf, dim = nc)
for (i in 1:nc) {
if (!silent)
cat(i, " ")
gg <- shift2gg(GG[, i], ns)
w <- opt.joint.Bokma(y, gg , pool = pool, hess = hess)
logl[i] <- w$logL
wl[[i]] <- w
}
source("~/Dropbox/GitHub/evoTS/R/shift2gg.R")
for (i in 1:nc) {
if (!silent)
cat(i, " ")
gg <- shift2gg(GG[, i], ns)
w <- opt.joint.Bokma(y, gg , pool = pool, hess = hess)
logl[i] <- w$logL
wl[[i]] <- w
}
gg
if (pool) {
y <- paleoTS::pool.var(y, ret.paleoTS = TRUE)
}
cl = list(fnscale = -1)
small <- 1e-08
y$tt <- y$tt - min(y$tt)
p0 <- array(dim = 3)
p0[1]<- y$mm[1]
p0[2] <- paleoTS::mle.URW(paleoTS::sub.paleoTS(y, ok = gg == 1))
if (p0[2] <= small) p0[2] <- 100 * small
p0[3] <- (paleoTS::sub.paleoTS(y, ok = gg == 2))$mm[1]
p0[4] <- paleoTS::mle.URW(paleoTS::sub.paleoTS(y, ok = gg == 2))
p0[2] <- paleoTS::mle.URW(paleoTS::sub.paleoTS(y, ok = gg == 1))
if (p0[2] <= small) p0[2] <- 100 * small
p0[3] <- (paleoTS::sub.paleoTS(y, ok = gg == 2))$mm[1]
sub.paleoTS(y, ok = gg == 2)
sub.paleoTS
setwd("~/Dropbox/Fossil time series/DATABASE")
indata<-read.table("PearsonEzard-Area.txt", header=T)
#y<-as.paleoTS(indata$mm[1:60], indata$vv[1:60], indata$N[1:60], indata$age[1:60], oldest="first")
indata.paleoTS<-as.paleoTS(indata$mm, indata$vv, indata$N, indata$age)
indata.paleoTS
indata.evoTS
fit.Bokma(indata.evoTS)
fit3models(indata.evoTS)
op.joint.decel(indata.evoTS)
opt.joint.decel(indata.evoTS)
opt.joint.OUBM(indata.evoTS)
> time_vector<-seq(0,19,1)
time_vector<-seq(0,19,1)
indata.evoTS<-paleoTS::as.paleoTS(mm = trait_means, vv = trait_variance, nn = sample_size, tt = time_vector)
fit.Bokma(indata.evoTS)
#y<-as.paleoTS(indata$mm[1:60], indata$vv[1:60], indata$N[1:60], indata$age[1:60], oldest="first")
indata.paleoTS<-as.paleoTS(indata$mm, indata$vv, indata$N, indata$age)
setwd("~/Dropbox/Fossil time series/DATABASE")
indata<-read.table("PearsonEzard-Area.txt", header=T)
names(indata)
#y<-as.paleoTS(indata$mm[1:60], indata$vv[1:60], indata$N[1:60], indata$age[1:60], oldest="first")
indata.paleoTS<-as.paleoTS(indata$mm, indata$vv, indata$N, indata$age)
plot(indata.paleoTS)
plotpaleoTS(indata.paleoTS)
fit.Bokma(indata.evoTS)
indata.paleoTS
opt.joint.decel(indata.evoTS)
opt.joint.accel(indata.evoTS)
fir.Bomka(indata.evoTS)
fit.Bomka(indata.evoTS)
fit.Bokma(indata.evoTS)
fit.all.univariate.models(indata.evoTS)
indata.evoTS
plot(indata.evoTS)
indata.evoTS
#y<-as.paleoTS(indata$mm[1:60], indata$vv[1:60], indata$N[1:60], indata$age[1:60], oldest="first")
indata.paleoTS<-as.paleoTS(indata$mm, indata$vv, indata$N, indata$age)
plot(indata.evoTS)
#y<-as.paleoTS(indata$mm[1:60], indata$vv[1:60], indata$N[1:60], indata$age[1:60], oldest="first")
indata.paleo<-as.paleoTS(indata$mm, indata$vv, indata$N, indata$age)
plotpaleoTS(indata.paleo)
plot(indata.paleo)
indata.paleo
fit.Bomka(indata.paleo)
fit.Bokma(indata.paleo)
paleoTS::fitGpunc(indata.paleo, minb=10, silent = TRUE)
paleoTS::fitGpunc
opt.joint.punc
ln.diameter
sub.paleoTS
y
ys <- y
ns <- length(y$mm)
take <- array(FALSE, dim = ns)
take
if (!is.null(ok))
take <- ok
gg
ok<-gg
k = 0.1
reset.time = TRUE
ys <- y
ns <- length(y$mm)
take <- array(FALSE, dim = ns)
if (!is.null(ok))
take <- ok
else take[sample(1:ns, size = round(k * ns))] <- TRUE
is.null(y$start.age)
if (is.null(y$start.age)) {
start.age.sub <- NULL
}
start.age.sub
is.null(y$start.age)
if (is.null(y$start.age)) {
start.age.sub <- NULL
}
td <- y$tt[1] - y$tt[take][1]
td
take
y$tt[take][1]
td <- y$tt[1] - y$tt[take][1]
if (y$timeDir == "increasing")
start.age.sub <- y$start.age + td
start.age.sub
y$start.age + td
p0[2] <- paleoTS::mle.URW(paleoTS::sub.paleoTS(y, ok = gg == 1))
p0[2]
if (p0[2] <= small) p0[2] <- 100 * small
p0[3] <- (paleoTS::sub.paleoTS(y, ok = gg == 2))$mm[1]
ok
ok=2
ys <- y
ns <- length(y$mm)
take <- array(FALSE, dim = ns)
if (!is.null(ok))
ys
ns
take <- array(FALSE, dim = ns)
take
if (!is.null(ok))
take <- ok
take
!is.null(ok)
ok
!is.null(ok)
take <- ok
take
is.null(y$start.age)
y$tt[take]
gg
ok = gg == 2
ok
ys <- y
ns <- length(y$mm)
take <- array(FALSE, dim = ns)
if (!is.null(ok))
take <- ok
else take[sample(1:ns, size = round(k * ns))] <- TRUE
if (is.null(y$start.age)) {
start.age.sub <- NULL
}
take
[take][1]
y$tt[take][1]
td <- y$tt[1] - y$tt[take][1]
td
y$tt
y$tt[take][1]
y
y$start.age
y$start.age - td
is.null(y$start.age)
start.age.sub <- y$start.age + td
start.age.sub
td
y$start.age!=0
if (y$start.age!=0) {
start.age.sub <- max(y&tt)
}
start.age.sub
y
start.age.sub
max(y&tt)
max(y$tt)
if (y$start.age!=0) {
start.age.sub <- max(y$tt)
}
start.age.sub
source("~/.active-rstudio-document")
y
fit.Bokma(y)
ys <- y
ns <- length(y$mm)
take <- array(FALSE, dim = ns)
if (!is.null(ok))
take <- ok
else take[sample(1:ns, size = round(k * ns))] <- TRUE
if (is.null(y$start.age)) {
start.age.sub <- NULL
}
ys <- y
ns <- length(y$mm)
take <- array(FALSE, dim = ns)
if (!is.null(ok))
take <- ok
else take[sample(1:ns, size = round(k * ns))] <- TRUE
if (is.null(y$start.age)) {
start.age.sub <- NULL
}
if (y$start.age!=0) {
start.age.sub <- max(y$tt)
}
#  else {
#    td <- y$tt[1] - y$tt[take][1]
#    if (y$timeDir == "increasing")
#      start.age.sub <- y$start.age + td
#    else start.age.sub <- y$start.age - td
#  }
slab <- paste("Subsetted from--", y$label)
ys <- as.paleoTS(mm = y$mm[take], vv = y$vv[take], nn = y$nn[take],
tt = y$tt[take], MM = y$MM[take], genpars = y$genpars,
label = slab, start.age = start.age.sub, oldest = "first",
reset.time = reset.time)
mm = y$mm[take]
y$mm[take]
vv = y$vv[take]
nn = y$nn[take]
tt = y$tt[take]
MM = y$MM[take]
genpars = y$genpars
label = slab
start.age.sub
y$tt[1]
ln.diameter
?as.paleoTS
source("~/Dropbox/GitHub/evoTS/R/fit.Bokma.R")
fit.Bokma(in.diameter)
fit.Bokma(ln.diameter)
fit.Bokma(ln.diameter, minb=10)
source("~/Dropbox/GitHub/evoTS/R/fit.Bokma.R")
x <- paleoTS::sim.GRW(60)
fit.Bokma(x, shift.point = 20)
fit.Bokma(ln.diameter, shift.point = 20)
fit.Bokma(ln.diameter, shift.point = NULL)
detach("package:evoTS", unload = TRUE)
library(evoTS)
fit.Bokma(ln.diameter, shift.point = NULL)
source("~/Dropbox/GitHub/evoTS/R/shifts.R")
fit.Bokma(ln.diameter, shift.point = NULL)
detach("package:evoTS", unload = TRUE)
document()
library(devtools)
document()
setwd("~/Dropbox/GitHub/evoTS")
document()
rm(fit.Bokma)
rm(shifts2gg)
rm(shift2gg)
rm(shifts)
document()
install()
ln.diameter<-paleoTS::ln.paleoTS(diameter_S.yellowstonensis)
ln.diameter$tt<-ln.diameter$tt/(max(ln.diameter$tt))
plotpaleoTS(ln.diameter)
opt.joint.decel(ln.diameter)
loglik.surface.decel(ln.diameter, vstep.vec = seq(0,1.2,0.01), r.vec = seq(-5,0,0.01))
lower upper
opt.joint.accel(ln.diameter)
Bokma.PE<-fit.Bokma(ln.diameter, minb=10)
Bokma.PE
loglik.surface.Bokma
loglik.surface.Bokma (ln.diameter, vstep_1.vec=seq(0,1,0.01), vstep_2.vec=seq(0,0.4, 0.01),shift=18, anc=3.7157502  , new.opt=4.1349082)
Stasis.PE<-paleoTS::fitGpunc(ln.diameter, minb=10, silent = TRUE)
Bokma.PE$AICc;Stasis.PE$AICc
opt.joint.OUBM(ln.diameter)
opt.joint.OUBM(ln.diameter, opt.anc  = FALSE)
paleoTS::opt.joint.OU(ln.diameter)
paleoTS::opt.joint.OU(ln.diameter)
paleoTS::opt.joint.OU(ln.diameter)
paleoTS::opt.joint.OU(ln.diameter)
paleoTS::opt.joint.OU(ln.diameter)
paleoTS::opt.joint.OU(ln.diameter)
paleoTS::opt.joint.OU(ln.diameter)
paleoTS::opt.joint.OU(ln.diameter)
> opt.joint.OUBM(ln.diameter, opt.anc  = FALSE)
opt.joint.OUBM(ln.diameter, opt.anc  = FALSE)
opt.joint.OUBM(ln.diameter)
pt.joint.OUBM(ln.diameter, opt.anc = TRUE, iterations = 100)
opt.joint.OUBM(ln.diameter, opt.anc = TRUE, iterations = 100)
loglik.surface.OU(ln.diameter, stat.var.vec=seq(0,0.1,0.001), h.vec=seq(0,0.4,0.001))
lower upper
fit.all.univariate.models(ln.diameter)
fit.all.univariate.models(ln.diameter)
Bokma.PE$parameters
fit.mode.shift(ln.diameter, model1 = "URW", model2 = "URW", minb = 10)
fit.mode.shift(ln.diameter, fit.all = TRUE, minb = 10)
ln.ribs<-paleoTS::ln.paleoTS(ribs_S.yellowstonensis)
ln.ribs$tt<-ln.ribs$tt/(max(ln.ribs$tt))
diam.ln_ribs.ln<-make.multivar.evoTS(ln.diameter, ln.ribs)
plotevoTS.multivariate(diam.ln_ribs.ln, y_min=3.4, y_max=4.8, x.label = "Relative time", pch=c(20,20)
)
plotevoTS.multivariate(diam.ln_ribs.ln, y_min=3.4, y_max=4.8, x.label = "Relative time", pch=c(20,20))
fit.multivariate.URW(diam.ln_ribs.ln, R = "diag", r = "fixed")
fit.multivariate.URW(diam.ln_ribs.ln, R = "symmetric", r = "fixed")
0.3878622/(sqrt(0.2787967)*sqrt(0.5635895))
model1<-fit.multivariate.URW(diam.ln_ribs.ln, R = "symmetric", r = "fixed")
stats::cov2cor(model1$R)
fit.multivariate.URW.shift(diam.ln_ribs.ln, hess = TRUE)
multi.accel<-fit.multivariate.URW(diam.ln_ribs.ln, R = "symmetric", r = "accel")
multi.decel<-fit.multivariate.URW(diam.ln_ribs.ln, R = "symmetric", r = "decel")
multi.accel$AICc;multi.decel$AICc
OUOU.model1<-fit.multivariate.OU(diam.ln_ribs.ln, A.matrix="diag", R.matrix="diag")
OUOU.model1
OUOU.model2<-fit.multivariate.OU(diam.ln_ribs.ln, A.matrix="diag", R.matrix="symmetric")
OUOU.model2<-fit.multivariate.OU(diam.ln_ribs.ln, A.matrix="diag", R.matrix="symmetric")
OUOU.model1$AICc;OUOU.model2$AICc
OUOU.model2
setwd("~/Dropbox/Fossil time series/DATABASE")
indata<-read.table("PearsonEzard-Area.txt", header=T)
names(indata)
#y<-as.paleoTS(indata$mm[1:60], indata$vv[1:60], indata$N[1:60], indata$age[1:60], oldest="first")
indata.paleo<-as.paleoTS(indata$mm, indata$vv, indata$N, indata$age)
plot(indata.paleo)
plotpaleTS(indata.paleo)
plotpaleoTS(indata.paleo)
.rs.restartR()
indata.paleo
fit.mode.shift(indata.paleo)
Warnings()
warnings()
?fit.mode.shift(indata.paleo, )
fit.mode.shift(indata.paleo, model1 = "Stasis", model2 = "OU")
fit.mode.shift(indata.paleo, model1 = "Stasis", model2 = "GRW")
fit.mode.shift(indata.paleo, model1 = "Stasis", model2 = "Stasis")
fit.mode.shift(indata.paleo, fit.all = TRUE)
fit.mode.shift(indata.paleo, model1 = "URW", model2 = "URW")
fit.mode.shift(indata.paleo)
fit.mode.shift
build_site()
setwd("~/Dropbox/GitHub/evoTS")
build_site()
ln.diameter<-paleoTS::ln.paleoTS(diameter_S.yellowstonensis)
ln.diameter$tt<-ln.diameter$tt/(max(ln.diameter$tt))
plotpaleoTS(ln.diameter)
plotpaleoTS(ln.diameter)
plotpaleoTS(ln.diameter)
abline(v=ln.diameter$tt[18])
plotpaleoTS(ln.diameter)
abline(v=ln.diameter$tt[18], col="red", lty=2)
plotpaleoTS(ln.diameter)
abline(v=ln.diameter$tt[18], col="red", lty=2, lwd=2)
build_site()
plotpaleoTS(ln.diameter)
plotpaleoTS(ln.diameter)
abline(v=ln.diameter$tt[18], col="red", lty=2, lwd=2)
build_site()
plotpaleoTS(ln.diameter)
plotpaleoTS(ln.diameter)
build_site()
build_site()
build_site()
indata<-read.table("Bell et al 2006 and Hunt et al 2008 DS.txt", header=T)
#y<-as.paleoTS(indata$mm[1:60], indata$vv[1:60], indata$N[1:60], indata$age[1:60], oldest="first")
indata.paleoTS<-as.paleoTS(indata$mm, indata$vv, indata$N, indata$age/max(indata$age), oldest="last")
indata.paleoTS
indata.paleoTS<-as.paleoTS(indata$mm, indata$vv, indata$N, indata$age, oldest="last")
indata.paleoTS
indata$age/max(indata$age)
plot(indata.paleoTS)
indata$age/max(indata$age)
indata$age
opt.joint.OUBM(indata.paleoTS)
opt.joint.OU(indata.paleoTS)
fit.mode.shift(indata.paleoTS, model1 = URW, model2 = GRW)
fit.mode.shift(indata.paleoTS, model1 = "URW", model2 = "GRW")
abline(v=indata.paleoTS$tt[27])
indata.paleoTS$tt[27]
plotpaleoTS(indata.paleoTS)
indata.paleoTS
opt.joint.accel(indata.paleoTS)
opt.joint.decel(indata.paleoTS)
check()
document()
pool.var
modelCurves
modelCurves
document()
check()
check()
devtools::spell_check()
goodpractice::gp()
install.packages("goodpractice")
goodpractice::gp()
check()
remove.packages("evoTS")
install()
requite(evoTS)
require(evoTS)
warnings()
library(evoTS)
opt.joint.dece
opt.joint.decel
